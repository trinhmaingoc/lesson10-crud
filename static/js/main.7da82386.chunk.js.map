{"version":3,"sources":["components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","onCloseForm","onChange","event","target","name","value","type","checked","setState","onSubmit","preventDefault","state","onClear","status","this","className","onClick","Component","Search","placeholder","Sort","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","href","Control","TaskItem","onUpdateStatus","task","onDeleteItem","index","TaskList","elmTasks","tasks","map","key","App","onDisplayForm","isDisplayForm","data","generateID","push","localStorage","setItem","JSON","stringify","findIndex","result","forEach","splice","getItem","parse","Math","floor","random","toString","substring","s4","elmTaskForm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.7da82386.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class TaskForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n       name: '',\r\n       status: false,\r\n    }\r\n  }\r\n  \r\n  onCloseForm = () => {\r\n    this.props.onCloseForm();\r\n  }\r\n\r\n  onChange = (event) => {\r\n    const target = event.target;\r\n    const name = target.name;\r\n    let value = target.type === 'checkbox' ? target.checked : target.value;\r\n    if (name === \"status\") {\r\n      value = target.value === \"true\" | target.value === true ? true : false;\r\n    }\r\n    this.setState({\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.onClear();\r\n    this.onCloseForm();\r\n  }\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      name: '',\r\n      status: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { name, status } = this.state;\r\n    return (\r\n      <div className=\"col-xs-12 col-sm-4 col-md-4 col-lg-4\">\r\n        {/* Form */}\r\n        <div className=\"panel panel-warning\">\r\n          <div className=\"panel-heading\">\r\n            <h3 className=\"panel-title\">\r\n              Thêm Công Việc\r\n                <span \r\n                className=\"fa fa-times-circle text-right\"\r\n                onClick={this.onCloseForm}\r\n                ></span>\r\n            </h3>\r\n          </div>\r\n          <div className=\"panel-body\">\r\n            <form onSubmit={this.onSubmit} >\r\n              <div className=\"form-group\">\r\n                <label>Tên: </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  onChange={this.onChange}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Trạng Thái: </label>\r\n                <select\r\n                  name=\"status\"\r\n                  className=\"form-control\"\r\n                  value={status}\r\n                  onChange={this.onChange}\r\n                >\r\n                  <option value={false}>Ẩn</option>\r\n                  <option value={true}>Kích Hoạt</option>\r\n                </select>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <button type=\"submit\" className=\"btn btn-warning\">\r\n                  <span className=\"fa fa-plus mr-5\" ></span>Lưu Lại\r\n                    </button> &nbsp;\r\n                    <button \r\n                      type=\"reset\" \r\n                      className=\"btn btn-danger\"\r\n                      onClick={this.onClear}\r\n                    >\r\n                  <span className=\"fa fa-close mr-5\" ></span>Hủy Bỏ\r\n                    </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from 'react'\r\n\r\nexport class Search extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-6 mt-15\">\r\n                <div className=\"input-group\">\r\n                    <input\r\n                        name=\"keyword\"\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Nhập từ khóa ...\"\r\n                    />\r\n                    <span className=\"input-group-btn\">\r\n                        <button type=\"button\" className=\"btn btn-primary\">\r\n                            <span className=\"fa fa-search mr-5\"></span>Tìm\r\n                </button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search\r\n","import React, { Component } from 'react'\r\n\r\nexport class Sort extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-xs-12 col-sm-6 col-md-6 col-lg-6 mt-15\">\r\n                <div className=\"dropdown\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary dropdown-toggle\"\r\n                        id=\"dropdownMenu1\"\r\n                        data-toggle=\"dropdown\"\r\n                        aria-haspopup=\"true\"\r\n                        aria-expanded=\"true\"\r\n                    >\r\n                        Sắp Xếp<span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li>\r\n                            <a role=\"button\" className=\"sort-selected\" href=\"/\">\r\n                                <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                    Tên A-Z\r\n                    </span>\r\n                            </a>\r\n                        </li>\r\n                        <li>\r\n                            <a role=\"button\" className=\"sort-selected\" href=\"/\">\r\n                                <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                    Tên Z-A\r\n                    </span>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sort\r\n","import React, { Component } from 'react'\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nexport class Control extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        {/* Search */}\r\n        <Search />\r\n        {/* Sort */}\r\n        <Sort />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from 'react'\r\n\r\nexport class TaskItem extends Component {\r\n  \r\n  onUpdateStatus = () => {\r\n    this.props.onUpdateStatus(this.props.task.id)\r\n  }\r\n\r\n  onDeleteItem = () => {\r\n    this.props.onDeleteItem(this.props.task.id)\r\n  }\r\n\r\n  render() {\r\n    const { task, index } = this.props;\r\n    return (\r\n      <tr>\r\n        <td> { index + 1 } </td>\r\n        <td> { task.name } </td>\r\n        <td className=\"text-center\">\r\n          <span \r\n            className={task.status ? \"label label-danger status\" : \"label label-success status\"}\r\n            onClick={this.onUpdateStatus}\r\n          >\r\n            { task.status ? \"Kích Hoạt\" : \"Ẩn\" }\r\n          </span>\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <button type=\"button\" className=\"btn btn-sm btn-warning\">\r\n            <span className=\"fa fa-pencil mr-5\"></span>Sửa\r\n          </button> &nbsp;\r\n          <button \r\n            type=\"button\"\r\n            className=\"btn btn-sm btn-danger\"\r\n            onClick={this.onDeleteItem}\r\n          >\r\n            <span className=\"fa fa-trash mr-5\"></span>Xóa\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskItem\r\n","import React, { Component } from 'react'\r\nimport TaskItem from './TaskItem'\r\n\r\nexport class TaskList extends Component {\r\n\r\n  render() {\r\n    const { tasks } = this.props;\r\n    const elmTasks = tasks.map((task, index) => (\r\n      <TaskItem \r\n        key={index}\r\n        task={task}\r\n        index={index}\r\n        onUpdateStatus={this.props.onUpdateStatus}\r\n        onDeleteItem={this.props.onDeleteItem}\r\n      />\r\n    ))\r\n    return (\r\n      <div className=\"row mt-15 tasklist\">\r\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 table-responsive\">\r\n          <table className=\"table table-bordered table-hover text-nowrap\">\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-center\">STT</th>\r\n                <th className=\"text-center\">Tên</th>\r\n                <th className=\"text-center\">Trạng Thái</th>\r\n                <th className=\"text-center\">Hành Động</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td></td>\r\n                <td>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"filterName\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <select\r\n                    name=\"filterStatus\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option value={-1}>Tất Cả</option>\r\n                    <option value={0}>Ẩn</option>\r\n                    <option value={1}>Kích Hoạt</option>\r\n                  </select>\r\n                </td>\r\n                <td></td>\r\n              </tr>\r\n              {elmTasks}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TaskList\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport TaskForm from './components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n    }\n  }\n\n  componentDidMount() {\n    if (localStorage && localStorage.getItem('tasks')) {\n      this.setState({\n        tasks: JSON.parse(localStorage.getItem('tasks')),\n      })\n    };\n  }\n\n  // onGenerateData = () => {\n  //   const tasks = [\n  //     {\n  //       id: this.generateID(),\n  //       name: 'Học lập trình',\n  //       status: true,\n  //     },\n  //     {\n  //       id: this.generateID(),\n  //       name: 'Đi bơi',\n  //       status: false,\n  //     },\n  //     {\n  //       id: this.generateID(),\n  //       name: 'Ngủ',\n  //       status: true,\n  //     },\n  //   ];\n  //   this.setState({\n  //     tasks: tasks,\n  //   });\n  //   localStorage.setItem('tasks', JSON.stringify(tasks));\n  // }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + '-' + this.s4() + this.s4() + this.s4();\n  }\n\n  onDisplayForm = () => {\n    this.setState({\n      isDisplayForm: !this.state.isDisplayForm,\n    })\n  }\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    })\n  }\n\n  onSubmit = (data) => {\n    const { tasks } = this.state;\n    data.id = this.generateID();\n    tasks.push(data);\n    this.setState({\n      tasks: tasks,\n    });\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  onUpdateStatus = (id) => {\n    const { tasks } = this.state;\n    const index = this.findIndex(id);\n    if (index !== -1) {\n      tasks[index].status = !tasks[index].status;\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    };\n  }\n\n  findIndex = (id) => {\n    const { tasks } = this.state;\n    let result = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        result = index;\n      }\n    });\n    return result;\n  }\n\n  onDeleteItem = (id) => {\n    const { tasks } = this.state;\n    const index = this.findIndex(id);\n    if (index !== -1) {\n      tasks.splice(index, 1);\n      this.setState({\n        tasks: tasks,\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n      this.onCloseForm();\n    }\n  }\n\n  render() {\n    const { tasks, isDisplayForm } = this.state;\n    const elmTaskForm = isDisplayForm ?\n      <TaskForm\n        onCloseForm={this.onCloseForm}\n        onSubmit={this.onSubmit}\n      />\n      : '';\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1> <hr />\n        </div>\n\n        <div className=\"row\">\n          {elmTaskForm}\n\n          <div className={isDisplayForm ? \"col-xs-12 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onDisplayForm}\n            >\n              <span className=\"fa fa-plus mr-5\"></span>\n              Thêm Công Việc\n            </button>\n            {/* <button \n              type=\"button\" \n              className=\"btn btn-danger ml-5\"\n              onClick={this.onGenerateData}\n            >\n              Generate Data\n            </button> */}\n            {/* Search - Sort */}\n            <Control />\n            {/* List */}\n            <TaskList\n              tasks={tasks}\n              onUpdateStatus={this.onUpdateStatus}\n              onDeleteItem={this.onDeleteItem}\n            />\n          </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}